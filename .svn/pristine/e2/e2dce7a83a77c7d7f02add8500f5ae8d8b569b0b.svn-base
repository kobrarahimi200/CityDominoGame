package logic;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.List;
import java.util.Scanner;
import javafx.stage.FileChooser;

/**
 * Save the game into a file.
 * @author Lenovo
 */
public class Save {

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    //String inPath = "C:\\Users\\kobra\\Desktop\\file.txt";
    FileOutputStream f = null;
    FileChooser fileChooser = null;
    OutputStreamWriter o = null;
    Scanner sc = null;
    int lineCounter = 0;

    public void saveField(GUIConnector gui, Players[] p, Domino[] nextBox, Choose[] nextChoose,
            Choose[] currChoose, Players currPlayer, int playerID,List<Domino> stack) throws IOException {
        System.out.println("output stream in the file");
        FileChooser chooser = new FileChooser();
        chooser.setTitle("Choose location To Save Report");
        File selectedFile = null;
        
        if (selectedFile == null) {
            selectedFile = chooser.showSaveDialog(null);
        }
        try {

            FileOutputStream f = new FileOutputStream(new File(selectedFile.getPath()));
            OutputStreamWriter o = new OutputStreamWriter(f);

            // Write objects to file
            for (Players p1 : p) {
                o.write("    \n" + p1.getField().toString());
            }
            o.write("\n<banks>\n");

            for (int i = playerID; i < currChoose.length; i++) {
                if(i == currChoose.length -1){
                     o.write(currChoose[i].getPlayer().getId()+ " " + currChoose[i].getDomino().toString());
                }else{
                    o.write(currChoose[i].getPlayer().getId()+ " " + currChoose[i].getDomino().toString() + ", ");
                }

                
            }
             o.write("    \n");
            for (int i = 0; i < nextBox.length; i++) {
                if( nextBox[i] == null){
                    if(i == nextBox.length -1){
                         o.write(nextChoose[i].getPlayer().getId() +" "+nextChoose[i].getDomino().toString());
                    }else{
                        o.write(nextChoose[i].getPlayer().getId() +" "+nextChoose[i].getDomino().toString()+ ", ");    
                    }
                }else{
                     if(i == nextBox.length -1){
                         o.write("- "+nextBox[i].getTile().toString());
                     }else{
                          o.write("- "+nextBox[i].getTile().toString()+ ", ");
                     }
                }
            }
            o.write("\n<bag>\n");
            for(int i = 0 ; i <stack.size(); i++){
                if(i == stack.size() -1){
                    o.write(stack.get(i).toString());
                }else{
                    o.write(stack.get(i).toString()+ ",");
                }
                
            }

            o.flush();
        } finally {
            // close
            if (o != null) {
                o.close();
            }
            if (f != null) {
                f.close();
            }

            System.out.println("File Closed");

        }

    }

}
